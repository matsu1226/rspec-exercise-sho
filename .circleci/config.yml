version: 2.1
orbs:
  ruby: circleci/ruby@1.1.2   # config.ymlのruby向け記法を導入
  # heroku: circleci/heroku@1.2.3

jobs:
  build:  # first job => githubとの連携、bundle install
    docker:
      - image: circleci/ruby:2.7  
    working_directory: ~/repec-exercise-sho/src
    steps:
      - checkout:
          path: ~/repec-exercise-sho
      - ruby/install-deps #bundle install

  test:   # second job => mySQLとrubyの導入、環境の設定
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        environment:    # mySQL /app/config/database.yml参照
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
          MYSQL_USER: root
    environment:  # test job 全体の環境設定
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"  # local host の指定
      RAILS_ENV: test
    working_directory: ~/repec-exercise-sho/src
    steps:
      - checkout:
          path: ~/repec-exercise-sho
      - ruby/install-deps
      - run:
          name: Database setup
          command: bundle exec rails db:migrate
      - run:
          name: test
          command: bundle exec rspec  # RSpec

  deploy:
    docker:
      - image: circleci/ruby:2.7
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - heroku/install
      - run:
          name: heroku login
          command: heroku container:login
      - run:
          name: push docker image
          command: heroku container:push web -a $HEROKU_APP_NAME
      - run:
          name: release docker image
          command: heroku container:release web -a $HEROKU_APP_NAME
      - run:
          name: database setup
          command: heroku run bundle exec rake db:migrate RAILS_ENV=production -a $HEROKU_APP_NAME

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build # first job
      - test: # second job
          requires:
            - build # before second job
      # - deploy:
      #     requires:
      #       - test
          # filters:
          #   branches:
          #     only: main